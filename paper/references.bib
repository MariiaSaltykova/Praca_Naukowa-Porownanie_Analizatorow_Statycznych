@article{zampetti2017recommending,
  title={Recommending when design technical debt should be self-admitted},
  author={Zampetti, Fiorella and Noiseux, Cedric and Antoniol, Giuliano and Khomh, Foutse and Di Penta, Massimiliano},
  journal={IEEE International Conference on Software Maintenance and Evolution},
  pages={216--226},
  year={2017},
  publisher={IEEE}
}

@article{johnson2013don,
  title={Why don't software developers use static analysis tools to find bugs?},
  author={Johnson, Brittany and Song, Yoonki and Murphy-Hill, Emerson and Bowdidge, Robert},
  journal={International Conference on Software Engineering},
  pages={672--681},
  year={2013},
  publisher={IEEE}
}

@article{beller2016analyzing,
  title={Analyzing the state of static analysis: A large-scale evaluation in open source software},
  author={Beller, Moritz and Bholanath, Radjino and McIntosh, Shane and Zaidman, Andy},
  journal={IEEE 23rd International Conference on Software Analysis, Evolution, and Reengineering},
  volume={1},
  pages={470--481},
  year={2016},
  publisher={IEEE}
}

@article{wagner2005static,
  title={Static analysis of security vulnerabilities},
  author={Wagner, David and Foster, Jeffrey and Brewer, Eric and Aiken, Alexander},
  journal={Communications of the ACM},
  volume={48},
  number={9},
  pages={94--101},
  year={2005},
  publisher={ACM}
}

@book{ayewah2008using,
  title={Using static analysis to find bugs},
  author={Ayewah, Nathaniel and Pugh, William and Morgenthaler, J David and Penix, John and Zhou, YuQian},
  journal={IEEE Software},
  volume={25},
  number={5},
  pages={22--29},
  year={2008},
  publisher={IEEE}
}

@article{christakis2016developers,
  title={What developers want and need from program analysis: an empirical study},
  author={Christakis, Maria and Bird, Christian},
  journal={International Conference on Automated Software Engineering},
  pages={332--343},
  year={2016},
  publisher={ACM}
}

@article{tomasdottir2018adoption,
  title={The adoption of software quality analysis tools in open source software projects: An empirical study},
  author={Tomasdottir, Kristin Fjola and Aniche, Mauricio and Van Deursen, Arie},
  journal={Journal of Systems and Software},
  volume={146},
  pages={96--110},
  year={2018},
  publisher={Elsevier}
}

@inproceedings{heitlager2007practical,
  title={A practical model for measuring maintainability},
  author={Heitlager, Ilja and Kuipers, Tobias and Visser, Joost},
  booktitle={6th International Conference on the Quality of Information and Communications Technology},
  pages={30--39},
  year={2007},
  organization={IEEE}
}

@article{nagappan2006static,
  title={Static analysis tools as early indicators of pre-release defect density},
  author={Nagappan, Nachiappan and Ball, Thomas},
  journal={International Conference on Software Engineering},
  pages={580--586},
  year={2006},
  publisher={ACM}
}

@article{vetro2011definition,
  title={Definition and validation of a quality model for automated assessment of defects detectability in source code},
  author={Vetro, Antonio and Morisio, Maurizio and Torchiano, Marco},
  journal={International Conference on Software Process and Product Measurement},
  pages={91--100},
  year={2011},
  publisher={IEEE}
}

@article{heckman2011systematic,
  title={A systematic literature review of actionable alert identification techniques for automated static code analysis},
  author={Heckman, Sarah and Williams, Laurie},
  journal={Information and Software Technology},
  volume={53},
  number={4},
  pages={363--387},
  year={2011},
  publisher={Elsevier}
}

@article{mccabe1976complexity,
  title={A complexity measure},
  author={McCabe, Thomas J},
  journal={IEEE Transactions on software Engineering},
  number={4},
  pages={308--320},
  year={1976},
  publisher={IEEE}
}

@article{lanza2006evolution,
  title={Evolution and decay of source code},
  author={Lanza, Michele and Marinescu, Radu},
  journal={Software Quality Journal},
  volume={14},
  number={3},
  pages={262--282},
  year={2006},
  publisher={Springer}
}

@article{halstead1977elements,
  title={Elements of Software Science},
  author={Halstead, Maurice H},
  journal={Operating Systems Review},
  volume={10},
  number={5},
  year={1977},
  publisher={Elsevier}
}

@article{lacerda2020code,
  title={Code smells and refactoring: A tertiary systematic review of challenges and observations},
  author={Lacerda, Gabriel and Petrillo, Fabio and Pimenta, Marcelo and Guéhéneuc, Yann-Gaël},
  journal={Journal of Systems and Software},
  volume={167},
  pages={110610},
  year={2020},
  publisher={Elsevier}
}

@inproceedings{chioteli2019investigation,
  title={An investigation of the association between code duplication and bug propagation in open source software systems},
  author={Chioteli, Ermira and Batas, Ioannis and Spinellis, Diomidis},
  booktitle={IEEE/ACM International Conference on Technical Debt},
  pages={43--52},
  year={2019},
  organization={IEEE}
}

@article{fenton1999critique,
  title={A critique of software defect prediction models},
  author={Fenton, Norman E and Neil, Martin},
  journal={IEEE Transactions on software engineering},
  volume={25},
  number={5},
  pages={675--689},
  year={1999},
  publisher={IEEE}
}

@article{smith2001practical,
  title={A practical approach to static code analysis},
  author={Smith, Kendra and Ragan, Thomas},
  journal={7th International Symposium on Software Reliability Engineering},
  pages={315--336},
  year={2001},
  publisher={IEEE}
}

@inproceedings{kim2007warnings,
  title={Which warnings should I fix first?},
  author={Kim, Sunghun and Ernst, Michael D},
  booktitle={Proceedings of the European Software Engineering Conference and the ACM SIGSOFT Symposium on The foundations of software engineering},
  pages={45--54},
  year={2007}
}

@article{zampetti2020study,
  title={A study on the interplay between code review and static analysis tools usage},
  author={Zampetti, Fiorella and Panichella, Sebastiano and Di Penta, Massimiliano},
  journal={Journal of Systems and Software},
  volume={169},
  pages={110947},
  year={2020},
  publisher={Elsevier}
}

@article{zampetti2017how,
  title={How open source projects use static code analysis tools in continuous integration pipelines},
  author={Zampetti, Fiorella and Scalabrino, Simone and Oliveto, Rocco and Canfora, Gerardo and Di Penta, Massimiliano},
  journal={IEEE/ACM 14th International Conference on Mining Software Repositories},
  pages={334--344},
  year={2017},
  publisher={IEEE}
}

@article{sadowski2018lessons,
  title={Lessons from building static analysis tools at Google},
  author={Sadowski, Caitlin and Aftandilian, Edward and Eagle, Alex and Miller-Cushon, Liam and Jaspan, Ciera},
  journal={Communications of the ACM},
  volume={61},
  number={4},
  pages={58--66},
  year={2018},
  publisher={ACM}
}

@article{livshits2005finding,
  title={Finding security vulnerabilities in Java applications with static analysis},
  author={Livshits, V Benjamin and Lam, Monica S},
  journal={USENIX Security Symposium},
  volume={14},
  pages={18--18},
  year={2005}
}

@inproceedings{jovanovic2006pixy,
  title={Pixy: A static analysis tool for detecting web application vulnerabilities},
  author={Jovanovic, Nenad and Kruegel, Christopher and Kirda, Engin},
  booktitle={IEEE Symposium on Security and Privacy},
  pages={258--263},
  year={2006},
  organization={IEEE}
}

@article{zitser2004testing,
  title={Testing static analysis tools using exploitable buffer overflows from open source code},
  author={Zitser, Misha and Lippmann, Richard and Leek, Tim},
  journal={ACM SIGSOFT Software Engineering Notes},
  volume={29},
  number={6},
  pages={97--106},
  year={2004},
  publisher={ACM}
}

@article{novak2010comparison,
  title={A comparison of static code analysis tools for Java programs},
  author={Novak, Jernej and Krajnc, Andrej and Zontar, Rok},
  journal={6th WSEAS International Conference on Software Engineering, Parallel and Distributed Systems},
  pages={147--152},
  year={2010}
}

@article{heinemann2014measuring,
  title={Measuring and monitoring software maintainability},
  author={Heinemann, Lars},
  journal={Software Quality Journal},
  volume={12},
  number={2},
  pages={142--159},
  year={2014},
  publisher={Springer}
}

@article{wagner2018static,
  title={Static analysis in continuous integration: An empirical evaluation},
  author={Wagner, Stefan and Ebert, Christof and Schäfer, Henning},
  journal={IEEE Software},
  volume={35},
  number={6},
  pages={15--21},
  year={2018},
  publisher={IEEE}
}

@article{chidamber1994metrics,
  title={A metrics suite for object oriented design},
  author={Chidamber, Shyam R and Kemerer, Chris F},
  journal={IEEE Transactions on Software Engineering},
  volume={20},
  number={6},
  pages={476--493},
  year={1994},
  publisher={IEEE}
}

@book{fenton2014software,
  title={Software metrics: a rigorous and practical approach},
  author={Fenton, Norman and Bieman, James},
  year={2014},
  edition={3},
  publisher={CRC Press}
}

@article{habib2015systematic,
  title={A systematic literature review of software code smells in object-oriented languages},
  author={Habib, Usman and Nadeem, Aamer},
  journal={OSR Journal of Computer Science and Engineering},
  volume={2},
  number={10},
  pages={1--10},
  year={2015}
}

@article{muske2018survey,
  title={A survey on static program analysis techniques for detecting library call vulnerabilities},
  author={Muske, Tukaram and Serebrenik, Alexander},
  journal={ACM Computing Surveys},
  volume={51},
  number={5},
  pages={1--36},
  year={2018},
  publisher={ACM}
}

@online{sonarqube2023,
  title={SonarQube Documentation: Metric Definitions},
  author={{SonarSource}},
  year={2023},
  url={https://docs.sonarqube.org/latest/user-guide/metric-definitions/},
  urldate={2023-12-01}
}

@online{qodana2023metrics,
  title={Qodana Documentation: Code Metrics},
  author={{JetBrains}},
  year={2023},
  url={https://www.jetbrains.com/help/qodana/metrics.html},
  urldate={2023-12-01}
}